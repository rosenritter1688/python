ass = "hello world"
a = 1
b = 4

print(ass.replace("hello", "uo"))
print('これは' , 'テスト' , 'です')
print('これは' , 'テスト' , 'です',sep="")

'''
オプション引数「end=”」のよく見られる使いかた
冒頭でも、お伝えしましたが、print関数のオプション引数「end=”」には他にもよく見られる使いかたがあります。

それが、

複数の文字列の出力を改行なしで行うための使いかた
連結する複数の文字列の間の空白を消すための使いかた
連結する複数の文字列の間に新たな文字列を挿入するための使い方
'''

#1. 複数の文字列の出力を改行しないで行う
#Pythonのprint関数は、複数の文字列を出力すると、デフォルトでは次のように改行されて表示されます。
#文字列変数を2つ作ります。
text_a = 'あなたはカレーが'
text_b = '好きです。'
 
#これを別々に出力すると改行されて表示されます。
print(text_a)
print(text_b)
##あなたはカレーが
##好きです。
print(text_a,end="")
print(text_b)
##あなたはカレーが好きです。

#2. 連結する複数の文字列の間の空白を消す
#Pythonのprint関数の引数には、複数の文字列を同時に書くことができますが、
# その場合、デフォルトでは文字列の間に空白（半角スペース）が入ります。
text_c = 'わたしは'
text_d = 'からいものが'
text_e = '苦手です。'
print(text_c, text_d, text_e)

text_c = 'わたしは'
text_d = 'からいものが'
text_e = '苦手です。'
print(f'{text_c}{text_d}{text_e}')
print(text_c + text_d + text_e)

''' 数値を様々に加工して連結することもできます。'''
population = 3000000
b_rate = 8.5

print(f'東京の人口は{population:,}人で、出生率は{b_rate:~^10.2f}です。')
##東京の人口は3,000,000人で、出生率は~~~8.50~~~です。
print(f'東京の人口は{population:,}人で、出生率は{b_rate:-^10.2f}です。')
##東京の人口は3,000,000人で、出生率は---8.50---です。
print(f'東京の人口は{population:,}人で、出生率は{b_rate:^10.2f}です。')
##東京の人口は3,000,000人で、出生率は   8.50   です。
